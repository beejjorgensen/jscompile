#!/bin/bash
#
# jscompile -- helper script to compile/compress JavaScript sources
#
# Invokes Closure, YUICompressor, UglifyJS, or plain-old cat to munge
# multiple JS files into a single file.
#
# See usage function for usage.
#
#
# License (MIT)
#
# Copyright (c) 2013 Brian "Beej Jorgensen" Hall <beej@beej.us>
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#

IFS=$'\n'
SCRIPTNAME=$(basename $0)

#
# Print usage and exit
#
function usage {
	local exit_status

	if [ $# -eq 0 ]; then
		printf "usage: $SCRIPTNAME [options] infile [infile2 ...]\n" 1>&2
		printf "\noptions:\n" 1>&2
		printf -- "    --output file    -o file    set output file name [default stdout]\n" 1>&2
		printf -- "    --closure        -c         use Closure compiler [default]\n" 1>&2
		printf -- "    --yuicompressor  -y         use YUICompressor\n" 1>&2
		printf -- "    --uglifyjs       -u         use UglifyJS\n" 1>&2
		printf -- "    --cat            -t         just concatenate\n" 1>&2
		printf "\nenvironment:\n" 1>&2
		printf -- "    JSCOMPILE_COMPILER name     set default compiler (closure,\n" 1>&2
		printf -- "                                yuicompressor, uglifyjs, cat)\n" 1>&2
	fi

	if [ $# -ge 1 ]; then
		printf "$SCRIPTNAME: $1\n" 2>&1
	fi

	if [ $# -eq 2 ]; then
		exit_status=$2
	else
		exit_status=1
	fi

	exit $exit_status
}

#
# MAIN
#

app=closure
infiles=""
outfilename=""
preopt=""
postopt=""

# Check for environment variables
case "x$JSCOMPILE_COMPILER" in
	"xclosure"|"xyuicompressor"|"xuglifyjs"|"cat")
		app="$JSCOMPILE_COMPILER"
		;;
	"x") ;;
	*)
		printf "$SCRIPTNAME: ignoring unknown JSCOMPILE_COMPILER \"$JSCOMPILE_COMPILER\"\n" 1>&2
esac

# Parse command line
while [ $# -ne 0 ]; do
	case "$1" in 
		"--output"|"-o")
			if [ $# -eq 1 ]; then usage "missing output file name"; fi
			shift
			if [ "$1" != "-" ]; then
				outfilename=$1
			fi
			;;
		"--closure"|"-c")
			app=closure
			;;
		"--yuicompressor"|"-y")
			app=yuicompressor
			;;
		"--uglifyjs"|"-u")
			app=uglifyjs
			postopt="--mangle --compress"
			;;
		"--cat"|"-t")
			app=cat
			;;
		"--help"|"-h"|"-?")
			usage
			;;
		*)
			if [ "${1#-}" != "$1" ]; then
				usage "unknown option $1" 2
			fi

			if [ ! -f "$1" ]; then
				usage "not found: $1" 3
			fi

			infiles="${infiles}$1"$'\n'
			;;
	esac

	shift
done

if [ "x$infiles" = "x" ]; then
	usage
fi

# Make sure command exists on this system
if ! which "$app" > /dev/null 2>&1; then
	usage "can't find command \"$app\" in path"
fi

# Execute!
case "$app" in
	"closure")
		command=""
		for f in $infiles; do
			command="$command --js \"$f\""
		done
		if [ "x$outfilename" != "x" ]; then
			command="$command --js_output_file \"$outfilename\""
		fi

		eval $app $preopt $command $postopt
		;;

	"uglifyjs")
		command=""
		for f in $infiles; do
			command="$command \"$f\""
		done
		if [ "x$outfilename" != "x" ]; then
			command="$command --output \"$outfilename\""
		fi

		eval $app $preopt $command $postopt
		;;
	
	"yuicompressor"|"cat")
		if [ "x$outfilename" != "x" ]; then
			rm -f "$outfilename"
		fi

		for f in $infiles; do
			if [ "x$outfilename" != "x" ]; then
				$app $preopt "$f" $postopt >> "$outfilename"
				printf "\n" >> "$outfilename"
			else
				$app $preopt "$f" $postopt
				printf "\n"
			fi
		done
		;;

	*)
		printf "$SCRIPTNAME: internal error: unknown app \"$app\"\n" 1>&2
		exit 9
esac

